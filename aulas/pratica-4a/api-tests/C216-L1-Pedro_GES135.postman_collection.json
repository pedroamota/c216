{
	"info": {
		"_postman_id": "98bf4839-93d7-4031-8e74-3b3de00d6660",
		"name": "C216-L1-Pedro_GES135",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18279940"
	},
	"item": [
		{
			"name": "GET - Listar todos os produtos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response should be a list\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Buscar Produto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response should contain products details\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('nome');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/1",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Adicionar um Produto",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response should contain confirmation message\", function () {",
							"    pm.expect(pm.response.json().message).to.eql('Produto adicionado com sucesso!');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"Farinha Com Fermento\",\n    \"repositor\": \"Pedro\",\n    \"quantidade\": 50,\n    \"preco\": 8.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - Vender um Livro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response should confirm sale\", function () {",
							"    pm.expect(pm.response.json().message).to.eql('Venda realizada com sucesso!');",
							"});",
							"",
							"pm.sendRequest(\"http://127.0.0.1:8000/api/v1/stock/1\", function (err, res) {",
							"    pm.test(\"Quantidade do produto foi atualizada\", function () {",
							"        let produto = res.json();",
							"        pm.expect(produto.quantidade).to.eql(8); // A quantidade deve ter sido reduzida",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"quantidade\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/1/vender/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						"1",
						"vender",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH - Atualizar Atributos de um Livro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response should confirm update\", function () {",
							"    pm.expect(pm.response.json().message).to.eql('Produto atualizado com sucesso!');",
							"});",
							"",
							"pm.sendRequest(\"http://127.0.0.1:8000/api/v1/stock/3\", function (err, res) {",
							"    pm.test(\"Os atributos do produto foram atualizados\", function () {",
							"        let produto = res.json();",
							"        pm.expect(produto.nome).to.eql(\"Farinha Sem Fermento\");",
							"        pm.expect(produto.repositor).to.eql(\"João\");",
							"        pm.expect(produto.preco).to.eql(6.5);",
							"        pm.expect(produto.quantidade).to.eql(20); // Verifica se a quantidade foi alterada",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"Farinha Sem Fermento\",\n    \"repositor\": \"João\",\n    \"quantidade\": 20,\n    \"preco\": 6.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/3",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Remover um Livro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response should confirm deletion\", function () {",
							"    pm.expect(pm.response.json().message).to.eql('Produto removido com sucesso!');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/1",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Remover Todos os Livros (RESETAR REPOSITORIO)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response should confirm deletion\", function () {",
							"    pm.expect(pm.response.json().message).to.eql('Repositorio limpo com sucesso!');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/stock/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"stock",
						""
					]
				}
			},
			"response": []
		}
	]
}